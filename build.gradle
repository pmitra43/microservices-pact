buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }

    }
    dependencies {
        classpath('com.github.jengelman.gradle.plugins:gradle-processes:0.3.0')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("au.com.dius:pact-jvm-provider-gradle_2.11:3.5.14")
    }
}

allprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    ext {
        versionFilePath = "$System.env.VERSION_FILE_PATH"
    }

}

subprojects {
    apply plugin: 'spring-boot'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        testCompile("au.com.dius:pact-jvm-consumer-junit_2.11:3.5.14")
    }
}

project(':microservices-pact-consumer') {
    apply plugin: 'au.com.dius.pact'

    version = '0.1.6'

    test {
        systemProperties['pact.rootDir'] = "$projectDir/build/pacts"
    }

    jar {
        baseName = 'microservices-pact-consumer'
        destinationDir = new File("$projectDir/build/libs")
    }

    pact {
        publish {
            pactBrokerUrl = 'http://localhost:80'
            tags = ["${project.version}", "abcd"]
        }
    }
}


project(':microservices-pact-provider') {
    apply plugin: 'au.com.dius.pact'
    apply plugin: 'com.github.johnrengelman.processes'

    version = '0.1.1'

    ext {
        pactFilePath = "$System.env.PACT_FILE"
    }

    task startProvider(type: com.github.jengelman.gradle.plugins.processes.tasks.JavaFork) {
        classpath = files("$projectDir/build/provider-libs/microservices-pact-provider-${version}.jar")
        classpath += sourceSets.main.runtimeClasspath
        main = 'io.pivotal.microservices.pact.provider.Application'
        doLast {
            Thread.sleep(10000)
        }
    }

    task stopProvider << {
        startProvider.processHandle.abort()
    }

    jar {
        baseName = 'microservices-pact-provider'
        destinationDir = new File("$projectDir/build/provider-libs")
    }

    pact {
        serviceProviders {
            Foo_Provider {
                hasPactsFromPactBrokerWithTag('http://localhost:80/', '0.1.6')
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
